<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             x:Name="MatchingPageInstance"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:resources="clr-namespace:GridGames.ResX"
             x:Class="GridGames.Views.MatchingPage"
             xmlns:localviews="clr-namespace:GridGames.Views"
             xmlns:vm="clr-namespace:GridGames.ViewModels"
             xmlns:windows="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific;assembly=Microsoft.Maui.Controls"
             Title="{Binding Title}">

    <ContentPage.BindingContext>
        <vm:MatchingViewModel />
    </ContentPage.BindingContext>

    <ContentPage.Resources>
        <ResourceDictionary>
            <localviews:FirstRunToGridIsEnabled x:Key="FirstRunToGridIsEnabled" />
            <localviews:FirstRunToGridOpacity x:Key="FirstRunToGridOpacity" />
            <localviews:CardFaceUpToImageWidth x:Key="CardFaceUpToImageWidth" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <Shell.TitleView>
        <Grid Margin="0,0,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            
            <Label Grid.Column="0" x:Name="GameTitleLabel"
                Text="{x:Static resources:AppResources.Pairs}"
                SemanticProperties.HeadingLevel="Level1" FontSize="Title"
                TextColor="{StaticResource White}"
                Margin="0,8,0,0" HorizontalOptions="Start" VerticalOptions="StartAndExpand" />
            
            <Button Grid.Column="1" Text="&#xf013;" x:Name="PairsSettingsButton"
                Clicked="MatchingGameSettingsButton_Clicked"
                BorderWidth="0"
                TextColor="{StaticResource White}"
                BackgroundColor="{StaticResource Primary}"                    
                windows:VisualElement.AccessKey="S"
                FontFamily="FA" FontSize="Title" HorizontalOptions="End" VerticalOptions="StartAndExpand"
                SemanticProperties.Description="{x:Static resources:AppResources.PairsSettings}" />
        </Grid>
    </Shell.TitleView>

    <ContentPage.Content>
        <Grid x:Name="PageGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- UI Automation hit testing hangs the app, so for now, disallow all taps and clicks in the grid.
                This means the game can only be played with the keyboard. Speech no longer works, so presumably
                that's simulating mouse input. -->
            
            <CollectionView Grid.Row="0"
                x:Name="SquaresCollectionView"
                SemanticProperties.Description="Pairs cards"
                Margin="5,5,5,0"
                IsEnabled="{Binding FirstRunMatching, Mode=OneWay,
                    Converter={StaticResource FirstRunToGridIsEnabled}}"
                Opacity="{Binding FirstRunMatching, Mode=OneWay,
                    Converter={StaticResource FirstRunToGridOpacity}}"
                SelectionMode="Single"
                ItemsSource="{Binding SquareListCollection}">

                <CollectionView.ItemsLayout>
                    <GridItemsLayout Orientation="Vertical" Span="4" />
                </CollectionView.ItemsLayout>

                <!-- Set AutomationProperties.IsInAccessibleTree="False" in some elements below 
                     in order to prevent containers being unnecessarily exposed through UIA. -->

                <!-- An AutomationProperties.Hint set on the Grid here does not seem to get propagated
                    up to the parent list item. So expose the contained image to have the hint exposed.
                    SemanticProperties.Hint="{Binding CurrentAccessibleDescription, Mode=OneWay}"-->

                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <!-- Remove the Border from the UIA tree, otherwise it gets exposed unnecessarily as
                            a group element. Still set a SemanticProperties.Description, as this will get
                            propogated up to be the UIA Name on the containing list item. -->
                        <Border Margin="0" Padding="0" 
                            AutomationProperties.IsInAccessibleTree="False"
                            SemanticProperties.Description="{Binding CurrentAccessibleName, Mode=OneWay}"
                            SemanticProperties.Hint="{Binding CurrentAccessibleMobileSquareHint, Mode=OneWay}">
                            <Border.GestureRecognizers>
                                <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped"
                                    CommandParameter="{Binding Index}" />
                            </Border.GestureRecognizers>

                            <Grid Padding="0" Margin="4"
                                BackgroundColor="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <!-- Don't enable hit testing on the image, as screen readers should hit the containing
                                    list item. If the customer is interested in the image details, the screen reader
                                    can navigate to the image from the list item. -->
                                <Image
                                    SemanticProperties.Description="{Binding CurrentAccessibleDescription, Mode=OneWay}"
                                    AutomationProperties.IsInAccessibleTree="{Binding FaceUp, Mode=OneWay}"
                                    InputTransparent="True"
                                    HeightRequest="{Binding 
                                        Source={x:Reference MatchingPageInstance},
                                            Path=BindingContext.GridRowHeight,
                                            Mode=OneWay}"
                                    Aspect="{Binding Source={x:Reference MatchingPageInstance},
                                        Path=BindingContext.PictureAspect,
                                        Mode=OneWay}"
                                    Source="{Binding PictureImageSource}">
                                    <Image.WidthRequest>
                                        <MultiBinding Mode="OneWay" 
                                            Converter="{StaticResource CardFaceUpToImageWidth}">
                                            <Binding Path="FaceUp" />
                                            <Binding Source="{RelativeSource AncestorType={x:Type Grid}}" 
                                                Path="Width" />
                                        </MultiBinding>
                                    </Image.WidthRequest>
                                </Image>
                            </Grid>
                        </Border>
                            
                    </DataTemplate>
                </CollectionView.ItemTemplate>
                
            </CollectionView>

            <Border Grid.Row="0" Margin="4" Padding="8" x:Name="WelcomeBorder" 
                IsVisible="{Binding FirstRunMatching}"
                SemanticProperties.Description="{x:Static resources:AppResources.PairsWelcome}"
                BackgroundColor="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}"
                VerticalOptions="Fill" HorizontalOptions="Fill">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" x:Name="MatchingWelcomeTitleLabel"
                        Text="{x:Static resources:AppResources.PairsWelcome}" 
                        SemanticProperties.HeadingLevel="Level1"
                        FontSize="Title" Margin="0,0,0,20" />
                    <ScrollView Grid.Row="1">
                        <Editor x:Name="MatchingWelcomeTitleInstructions" IsReadOnly="True" FontSize="Medium"
                            SemanticProperties.Description="{x:Static resources:AppResources.PairsWelcome}"
                            Text="{x:Static resources:AppResources.WelcomeInstructions}" />
                    </ScrollView>
                    <Button Grid.Row="2" x:Name="WelcomeMessageCloseButton"
                        Text="Close welcome message" 
                        Clicked="WelcomeMessageCloseButton_Clicked"
                        windows:VisualElement.AccessKey="C"
                        HorizontalOptions="End" Margin="0,4,4,4" Padding="8" />
                </Grid>
            </Border>
            
        </Grid>
    </ContentPage.Content>
</ContentPage>