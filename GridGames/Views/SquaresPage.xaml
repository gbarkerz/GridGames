<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             x:Name="SquaresPageInstance"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:resources="clr-namespace:GridGames.ResX"
             x:Class="GridGames.Views.SquaresPage"
             xmlns:localviews="clr-namespace:GridGames.Views"
             xmlns:vm="clr-namespace:GridGames.ViewModels"
             xmlns:skia="clr-namespace:SkiaSharp.Views.Maui.Controls;assembly=SkiaSharp.Views.Maui.Controls"
             xmlns:drawable="clr-namespace:GridGames.Views"
             xmlns:windows="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific;assembly=Microsoft.Maui.Controls"
             xmlns:views="clr-namespace:GridGames.Views"
             Title="{Binding Title}">

    <ContentPage.BindingContext>
        <vm:SquaresViewModel />
    </ContentPage.BindingContext>

    <ContentPage.Resources>
        <ResourceDictionary>
            <localviews:FirstRunLoadingSquaresToGridIsEnabled x:Key="FirstRunLoadingSquaresToGridIsEnabled" />
            <localviews:FirstRunLoadingSquaresToGridOpacity x:Key="FirstRunLoadingSquaresToGridOpacity" />
            <localviews:SquaresTargetIndexToNumberIsVisible x:Key="SquaresTargetIndexToNumberIsVisible" />
            <localviews:GridRowHeightToLabelHeight x:Key="GridRowHeightToLabelHeight" />
            <localviews:DarkThemeToSquareLabelColor x:Key="DarkThemeToSquareLabelColor" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <Shell.TitleView>
        <views:PageTitleArea x:Name="PageTitleArea" Margin="0" Padding="0" />
    </Shell.TitleView>

    <ContentPage.Content>

        <Grid x:Name="PageGrid">

            <ScrollView x:Name="SquaresGridScrollView"
                Orientation="Both" Padding="0">

                <CollectionView
                    x:Name="SquaresCollectionView"
                    Margin="0" 
                    SemanticProperties.Description="{x:Static resources:AppResources.Squares}"               
                    MinimumWidthRequest="{Binding Source={RelativeSource AncestorType={x:Type ScrollView}},
                        Path=Width}" 
                    MinimumHeightRequest="{Binding Source={RelativeSource AncestorType={x:Type ScrollView}},
                        Path=Height}" 
                    BackgroundColor="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}"
                    VerticalScrollBarVisibility="Never"
                    SelectionMode="Single"
                    ItemsSource="{Binding SquareListCollection}">

                    <CollectionView.IsEnabled>
                        <MultiBinding Mode="OneWay" Converter="{StaticResource FirstRunLoadingSquaresToGridIsEnabled}">
                            <Binding Source="{x:Reference SquaresPageInstance}" Path="BindingContext.FirstRunSquares" />
                            <Binding Source="{x:Reference SquaresPageInstance}" Path="BindingContext.GameIsLoading" />
                        </MultiBinding>
                    </CollectionView.IsEnabled>
                    <CollectionView.Opacity>
                        <MultiBinding Mode="OneWay" Converter="{StaticResource FirstRunLoadingSquaresToGridOpacity}">
                            <Binding Source="{x:Reference SquaresPageInstance}" Path="BindingContext.FirstRunSquares" />
                            <Binding Source="{x:Reference SquaresPageInstance}" Path="BindingContext.GameIsLoading" />
                        </MultiBinding>
                    </CollectionView.Opacity>

                    <CollectionView.ItemsLayout>
                        <GridItemsLayout Orientation="Vertical" Span="4" />
                    </CollectionView.ItemsLayout>

                    <CollectionView.ItemTemplate>
                        <DataTemplate>
                            <!-- Remove the Border from the UIA tree, otherwise it gets exposed unnecessarily as
                                a group element. Still set a SemanticProperties.Description, as this will get
                                propogated up to be the UIA Name on the containing list item. -->
                            <Border Margin="0" Padding="0"
                                AutomationProperties.IsInAccessibleTree="False"
                                HeightRequest="{Binding 
                                    Source={x:Reference SquaresPageInstance},
                                        Path=BindingContext.GridRowHeight,
                                        Mode=OneWay}"
                                StrokeThickness="1"
                                Stroke="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}"
                                SemanticProperties.Description="{Binding AccessibleName, Mode=OneWay}"
                                SemanticProperties.Hint="{Binding AccessibleDescription, Mode=OneWay}">
                                
                                <Border.GestureRecognizers>
                                    <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped"
                                        CommandParameter="{Binding Index}" />
                                </Border.GestureRecognizers>

                                <Grid Padding="0" Margin="0">

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <!-- Barker: IMPORTANT. Read the comment at the top of SquaresPage.xaml.cs
                                        relating to not being able to find a reliable way of binding IsVisible
                                        to the items being swapped around the CollectioView as the game is played. -->

                                    <Image Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="2"
                                        AutomationProperties.IsInAccessibleTree="False"
                                        InputTransparent="True"
                                        Aspect="Fill"
                                        BackgroundColor="Transparent"
                                        Source="{Binding PictureImageSource}">
                                    </Image>

                                    <Border 
                                        Stroke="{AppThemeBinding Light=Black, Dark=White}"
                                        BackgroundColor="{AppThemeBinding Light=White, Dark=Black}"
                                        StrokeThickness="1">

                                        <Border.IsVisible>
                                            <MultiBinding Mode="OneWay" Converter="{StaticResource SquaresTargetIndexToNumberIsVisible}">
                                                <Binding Source="{x:Reference SquaresPageInstance}" Path="BindingContext.ShowNumbers" />
                                                <Binding Path="TargetIndex" />
                                            </MultiBinding>
                                        </Border.IsVisible>

                                        <!-- Barker TODO: When the app was first built, it needed its own ShowDarkTheme 
                                            property to support dark theme colours. Check if any of that is still needed. -->
                                        <Label Margin="0" Padding="8"  
                                            IsVisible="{Binding TargetIndex}"
                                            AutomationProperties.IsInAccessibleTree="False"
                                            FontAttributes="Bold"
                                            InputTransparent="True"
                                            Text="{Binding VisualLabel}"
                                            TextColor="{Binding Source={x:Reference SquaresPageInstance},
                                                Path=BindingContext.ShowDarkTheme,
                                                ConverterParameter=0,
                                                Converter={StaticResource DarkThemeToSquareLabelColor}}"
                                            BackgroundColor="{Binding Source={x:Reference SquaresPageInstance},
                                                Path=BindingContext.ShowDarkTheme,
                                                ConverterParameter=1,
                                                Converter={StaticResource DarkThemeToSquareLabelColor}}"
                                            HorizontalOptions="StartAndExpand" VerticalOptions="StartAndExpand">
                                        </Label>

                                    </Border>

                                </Grid>
                            </Border>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
            </ScrollView>
            
            <!-- Show a message when the pictures are being loaded into the squares. -->
            <Border
                IsVisible="{Binding GameIsLoading}"
                Stroke="{AppThemeBinding Light=Black, Dark=White}"
                BackgroundColor="{DynamicResource PageBackgroundColor}"
                SemanticProperties.Description="{x:Static resources:AppResources.LoadingPleaseWait}"
                VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand">
                <Label x:Name="PleaseWaitLabel"
                    Margin="8"
                    Text="{x:Static resources:AppResources.LoadingPleaseWait}"
                    FontSize="Title" />
            </Border>

            <Border Margin="4" Padding="8" x:Name="WelcomeBorder"
                IsVisible="{Binding FirstRunSquares}"
                Stroke="{AppThemeBinding Light=Black, Dark=White}"
                BackgroundColor="{DynamicResource PageBackgroundColor}"
                SemanticProperties.Description="{x:Static resources:AppResources.SquaresWelcome}"
                VerticalOptions="Fill" HorizontalOptions="Fill">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" x:Name="SquaresWelcomeTitleLabel"
                        Text="{x:Static resources:AppResources.SquaresWelcome}"                        
                        FontSize="Title" />
                    <ScrollView Grid.Row="1">
                        <Editor x:Name="SquaresWelcomeTitleInstructions" IsReadOnly="True"
                            SemanticProperties.Description="{x:Static resources:AppResources.SquaresWelcome}"
                            Text="{x:Static resources:AppResources.WelcomeInstructions}" />
                    </ScrollView>
                    <Button Grid.Row="2" x:Name="WelcomeMessageCloseButton"
                        Text="{x:Static resources:AppResources.Close}" 
                        Clicked="WelcomeMessageCloseButton_Clicked"
                        TextColor="{StaticResource White}" BackgroundColor="{StaticResource Primary}"
                        HorizontalOptions="End" Margin="0,4,4,4" Padding="8" />
                </Grid>
            </Border>
        </Grid>

    </ContentPage.Content>
    
</ContentPage>