<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             x:Name="SquaresPageInstance"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:resources="clr-namespace:GridGames.ResX"
             x:Class="GridGames.Views.SquaresPage"
             xmlns:localviews="clr-namespace:GridGames.Views"
             xmlns:vm="clr-namespace:GridGames.ViewModels"
             xmlns:drawable="clr-namespace:GridGames.Views"
             xmlns:windows="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific;assembly=Microsoft.Maui.Controls"
             Title="{Binding Title}">

    <ContentPage.BindingContext>
        <vm:SquaresViewModel />
    </ContentPage.BindingContext>

    <ContentPage.Resources>
        <ResourceDictionary>
            <localviews:FirstRunLoadingSquaresToGridOpacity x:Key="FirstRunLoadingSquaresToGridOpacity" />
            <localviews:GameIsLoadingToGridOpacity x:Key="GameIsLoadingToGridOpacity" />
            <localviews:GameIsLoadingToVisibility x:Key="GameIsLoadingToVisibility" />
            <localviews:CollectionViewHeightToRowHeight x:Key="CollectionViewHeightToRowHeight" />
            <localviews:NumberSizeIndexToGridRowHeight x:Key="NumberSizeIndexToGridRowHeight" />
            <localviews:LabelContainerHeightToFontSize x:Key="LabelContainerHeightToFontSize" />
            <localviews:SquareTargetIndexToIsVisible x:Key="SquareTargetIndexToIsVisible" />
            <localviews:SquareTargetIndexToContainerFrameVisibility x:Key="SquareTargetIndexToContainerFrameVisibility" />
            <localviews:SquareTargetIndexToBackgroundColor x:Key="SquareTargetIndexToBackgroundColor" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <Shell.TitleView>
        <Grid Padding="0"
              BackgroundColor="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource Primary}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Grid.ColumnSpan="2"
                Text="{x:Static resources:AppResources.Squares}"
                SemanticProperties.HeadingLevel="Level1" FontSize="Title"
                TextColor="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource White}}"
                HorizontalOptions="Center" VerticalOptions="Center" />
            <Button Grid.Column="1" Text="&#xf013;" x:Name="SquaresSettingsButton"
                Clicked="SquaresGameSettingsButton_Clicked"
                BorderWidth="0"
                windows:VisualElement.AccessKey="S"
                FontFamily="FA" FontSize="Title" HorizontalOptions="End"
                SemanticProperties.Description="{x:Static resources:AppResources.SquaresSettings}" />
        </Grid>
    </Shell.TitleView>

    <ContentPage.Content>

        <Grid x:Name="PageGrid">

            <Grid.RowDefinitions>
                <RowDefinition Height="0" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- The SfImageEditor is used to programmatically crop the picture in order to show it
                on the squares, and is never shown to the player. -->

            <!-- Barker: In the first version of this app, this imageeditor had an "IsVisible" of False.
                The intent was that it was never to be shown visually or exposed to TalkBack. However,
                after installing a later version of Syncfusion.Xamarin.SfImageEditor, it seemed that if
                IsVisible is False, then the ImageLoaded event handler never got called after an image 
                was loaded. This problem went away is IsVisible is not set False, and so the below was 
                changed accordingly. Because the imageeditor is contained in a zero-height row, it still 
                has no visuals on the screen. However I'm concerned that the imageeditor would now be 
                exposed to TalkBack, and so this requires further investigation. In my testing, I can't
                get TalkBack to move to the now-visible imageeditor, and so the player experience seems 
                unchanged from the earlier version. 
            -->

            <!-- Barker: No image editor for now. -->
            <!--<imageeditor:SfImageEditor Grid.Row="0" x:Name="GridGameImageEditor" 
                ImageLoaded="GridGameImageEditor_ImageLoaded" 
                ImageEdited="GridGameImageEditor_ImageEdited"                                              
                ImageSaving="GridGameImageEditor_ImageSaving"
                EndReset="GridGameImageEditor_EndReset" />-->

            <!-- Future: Consider binding the CollectionView's IsEnabled on first run or loading.
                A quick test of that set IsEnabled as expected, but that didn't prevent input. -->

            <CollectionView Grid.Row="1"
                x:Name="SquaresCollectionView"
                IsVisible="True"
                VerticalScrollBarVisibility="Never"
                SelectionMode="Single"
                ItemsSource="{Binding SquareListCollection}">
                <CollectionView.Opacity>
                    <MultiBinding Mode="OneWay" Converter="{StaticResource FirstRunLoadingSquaresToGridOpacity}">
                        <Binding Source="{x:Reference SquaresPageInstance}" Path="BindingContext.FirstRunSquares" />
                        <Binding Source="{x:Reference SquaresPageInstance}" Path="BindingContext.GameIsLoading" />
                    </MultiBinding>
                </CollectionView.Opacity>

                <CollectionView.ItemsLayout>
                    <GridItemsLayout Orientation="Vertical" Span="4" />
                </CollectionView.ItemsLayout>

                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <Grid HeightRequest="{Binding Source={RelativeSource AncestorType={x:Type CollectionView}}, 
                            Path=Height, Converter={StaticResource CollectionViewHeightToRowHeight}}"
                            BackgroundColor="{DynamicResource GridBackgroundColor}"
                            AutomationProperties.IsInAccessibleTree="True"
                            AutomationProperties.Name="{Binding AccessibleName}"
                            AutomationProperties.HelpText="{Binding AccessibleDescription}">
                            <Grid.GestureRecognizers>
                                <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped" />
                            </Grid.GestureRecognizers>
                            <Frame Margin="2" Padding="0"
                                BackgroundColor="{Binding TargetIndex, 
                                    Converter={StaticResource SquareTargetIndexToBackgroundColor}}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition 
                                            x:Name="SquareNumberGridRow"
                                            Height="{Binding
                                                Source={x:Reference SquaresPageInstance},
                                                Path=BindingContext.NumberHeight,
                                                Mode=OneWay,
                                                Converter={StaticResource NumberSizeIndexToGridRowHeight},
                                                ConverterParameter=0}" />
                                        <RowDefinition 
                                            Height="{Binding
                                                Source={x:Reference SquaresPageInstance},
                                                Path=BindingContext.NumberHeight,
                                                Mode=OneWay,
                                                Converter={StaticResource NumberSizeIndexToGridRowHeight},
                                                ConverterParameter=1}" />
                                    </Grid.RowDefinitions>

                                    <Image Grid.Row="0" Grid.RowSpan="2"
                                        Source="{Binding PictureImageSource}"
                                        Aspect="Center"
                                        InputTransparent="True">
                                        <Image.IsVisible>
                                            <MultiBinding Mode="OneWay" Converter="{StaticResource SquareTargetIndexToIsVisible}">
                                                <Binding Path="TargetIndex" />
                                                <Binding Source="{x:Reference SquaresPageInstance}" Path="BindingContext.ShowPicture" />
                                            </MultiBinding>
                                        </Image.IsVisible>
                                    </Image>

                                    <Grid Grid.Row="0" x:Name="LabelPanel"
                                        BackgroundColor="Transparent"
                                        IsVisible="{Binding
                                        Source={x:Reference SquaresPageInstance},
                                        Path=BindingContext.ShowNumbers}">
                                        <Frame Margin="0" Padding="4,0,4,0" HorizontalOptions="Start"
                                            BorderColor="Transparent"
                                            BackgroundColor="{Binding TargetIndex, 
                                                Converter={StaticResource SquareTargetIndexToBackgroundColor}}"
                                            IsVisible="{Binding TargetIndex, 
                                                Converter={StaticResource SquareTargetIndexToContainerFrameVisibility}}">
                                            <Label Text="{Binding VisualLabel}"
                                                TextColor="{DynamicResource SquaresNumberTextColor}"                                               
                                                Margin="2,0,4,0"
                                                HorizontalOptions="Center" VerticalOptions="Center"
                                                HeightRequest="{Binding Source={RelativeSource AncestorType={x:Type Grid}}, Path=Height}">
                                                <Label.FontSize>
                                                    <!-- Don't only bind to the grid height here, as that leaves the FontSize zero when
                                                        ShowNumbers is set true after moving squares when ShowNumbers is false. -->
                                                    <MultiBinding Mode="OneWay" 
                                                        Converter="{StaticResource LabelContainerHeightToFontSize}">
                                                        <Binding Source="{x:Reference SquaresPageInstance}"
                                                            Path="BindingContext.ShowNumbers" />
                                                        <Binding Source="{RelativeSource AncestorType={x:Type Grid}}" 
                                                            Path="Height" />
                                                    </MultiBinding>
                                                </Label.FontSize>
                                            </Label>
                                        </Frame>
                                    </Grid>
                                    <StackLayout Grid.Row="1" BackgroundColor="Transparent" />
                                </Grid>
                            </Frame>
                        </Grid>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>

            <!-- Show a message when the pictures are being loaded into the squares. -->
            <Frame Grid.Row="1"
                IsVisible="{Binding GameIsLoading}"
                BorderColor="{DynamicResource MessageTextColor}"
                BackgroundColor="{DynamicResource PageBackgroundColor}"
                AutomationProperties.Name="{x:Static resources:AppResources.LoadingPleaseWait}"
                VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand">
                <Label x:Name="PleaseWaitLabel"
                    Text="{x:Static resources:AppResources.LoadingPleaseWait}"
                    FontSize="Large" />
            </Frame>

            <!-- This Grid is here to support a setting to visually hide the game grid contents. -->
            <Grid Grid.Row="1" IsVisible="{Binding HideGrid}"
                BackgroundColor="{DynamicResource GridBackgroundColor}" />

            <Frame Grid.Row="1" Margin="4" Padding="8"
                IsVisible="{Binding FirstRunSquares}"
                BorderColor="{DynamicResource MessageTextColor}"
                BackgroundColor="{DynamicResource PageBackgroundColor}"
                AutomationProperties.Name="{x:Static resources:AppResources.SquaresWelcome}"
                VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" x:Name="SquaresWelcomeTitleLabel"
                        Text="{x:Static resources:AppResources.SquaresWelcome}"                        
                        FontSize="Large" FontAttributes="Bold" />
                    <ScrollView Grid.Row="1">
                        <Label x:Name="SquaresWelcomeTitleInstructions" FontSize="Medium">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{x:Static resources:AppResources.WelcomeInstructions}" />
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                    </ScrollView>
                    <Button Grid.Row="2" Margin="0"
                            Text="{x:Static resources:AppResources.Close}" 
                            Clicked="SquaresWelcomeOKButton_Clicked"
                            HorizontalOptions="End" />
                </Grid>
            </Frame>

        </Grid>
    </ContentPage.Content>
    
</ContentPage>