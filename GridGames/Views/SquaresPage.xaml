<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             x:Name="SquaresPageInstance"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:resources="clr-namespace:GridGames.ResX"
             x:Class="GridGames.Views.SquaresPage"
             xmlns:localviews="clr-namespace:GridGames.Views"
             xmlns:vm="clr-namespace:GridGames.ViewModels"
             xmlns:skia="clr-namespace:SkiaSharp.Views.Maui.Controls;assembly=SkiaSharp.Views.Maui.Controls"
             xmlns:drawable="clr-namespace:GridGames.Views"
             xmlns:windows="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific;assembly=Microsoft.Maui.Controls"
             xmlns:views="clr-namespace:GridGames.Views"
             Title="{Binding Title}">

    <ContentPage.BindingContext>
        <vm:SquaresViewModel />
    </ContentPage.BindingContext>

    <ContentPage.Resources>
        <ResourceDictionary>
            <localviews:FirstRunLoadingSquaresToGridIsEnabled x:Key="FirstRunLoadingSquaresToGridIsEnabled" />
            <localviews:FirstRunLoadingSquaresToGridOpacity x:Key="FirstRunLoadingSquaresToGridOpacity" />
            <localviews:CollectionViewHeightToRowHeight x:Key="CollectionViewHeightToRowHeight" />
            <localviews:LabelContainerHeightToFontSize x:Key="LabelContainerHeightToFontSize" />
            <localviews:DarkThemeToSquareLabelColor x:Key="DarkThemeToSquareLabelColor" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <Shell.TitleView>
        <views:PageTitleArea Margin="0" Padding="0" />
    </Shell.TitleView>

    <ContentPage.Content>

        <Grid x:Name="PageGrid">

            <CollectionView
                x:Name="SquaresCollectionView"
                SemanticProperties.Description="{x:Static resources:AppResources.Squares}"               
                VerticalScrollBarVisibility="Never"
                SelectionMode="Single"
                ItemsSource="{Binding SquareListCollection}">
                <CollectionView.IsEnabled>
                    <MultiBinding Mode="OneWay" Converter="{StaticResource FirstRunLoadingSquaresToGridIsEnabled}">
                        <Binding Source="{x:Reference SquaresPageInstance}" Path="BindingContext.FirstRunSquares" />
                        <Binding Source="{x:Reference SquaresPageInstance}" Path="BindingContext.GameIsLoading" />
                    </MultiBinding>
                </CollectionView.IsEnabled>
                <CollectionView.Opacity>
                    <MultiBinding Mode="OneWay" Converter="{StaticResource FirstRunLoadingSquaresToGridOpacity}">
                        <Binding Source="{x:Reference SquaresPageInstance}" Path="BindingContext.FirstRunSquares" />
                        <Binding Source="{x:Reference SquaresPageInstance}" Path="BindingContext.GameIsLoading" />
                    </MultiBinding>
                </CollectionView.Opacity>

                <CollectionView.ItemsLayout>
                    <GridItemsLayout Orientation="Vertical" Span="4" />
                </CollectionView.ItemsLayout>

                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <!-- Remove the Border from the UIA tree, otherwise it gets exposed unnecessarily as
                            a group element. Still set a SemanticProperties.Description, as this will get
                            propogated up to be the UIA Name on the containing list item. -->
                        <Border Margin="0" Padding="0"
                            AutomationProperties.IsInAccessibleTree="False"
                            HeightRequest="{Binding Source={RelativeSource AncestorType={x:Type CollectionView}},
                                Path=Height, Converter={StaticResource CollectionViewHeightToRowHeight}}"
                            StrokeThickness="1"
                            Stroke="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}"
                            SemanticProperties.Description="{Binding AccessibleName, Mode=OneWay}"
                            SemanticProperties.Hint="{Binding AccessibleDescription, Mode=OneWay}">
                            <Border.GestureRecognizers>
                                <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped"
                                    CommandParameter="{Binding Index}" />
                            </Border.GestureRecognizers>

                            <Grid Padding="0" Margin="4">

                                <!-- Barker: IMPORTANT. Read the comment at the top of SquaresPage.xaml.cs
                                    relating to not being able to find a reliable way of binding IsVisible
                                    to the items being swapped around the CollectioView as the game is played. -->
                                
                                <Image 
                                    AutomationProperties.IsInAccessibleTree="False"
                                    InputTransparent="True"
                                    Aspect="Fill"
                                    BackgroundColor="Transparent"
                                    Source="{Binding PictureImageSource}">
                                </Image>
                                
                                <Label Margin="2,2,0,0" Padding="2,0,2,0"  
                                    AutomationProperties.IsInAccessibleTree="False"
                                    InputTransparent="True"
                                    Text="{Binding VisualLabel}"
                                    TextColor="{Binding Source={x:Reference SquaresPageInstance},
                                        Path=BindingContext.ShowDarkTheme,
                                        ConverterParameter=0,
                                        Converter={StaticResource DarkThemeToSquareLabelColor}}"
                                    BackgroundColor="{Binding Source={x:Reference SquaresPageInstance},
                                        Path=BindingContext.ShowDarkTheme,
                                        ConverterParameter=1,
                                        Converter={StaticResource DarkThemeToSquareLabelColor}}"
                                    HorizontalOptions="Start" VerticalOptions="Start">
                                    <Label.FontSize>
                                        <MultiBinding Mode="OneWay" 
                                            Converter="{StaticResource LabelContainerHeightToFontSize}">
                                            <Binding 
                                                Source="{RelativeSource AncestorType={x:Type CollectionView}}" 
                                                Path="Height" />
                                            <Binding 
                                                Source="{x:Reference SquaresPageInstance}"
                                                Path="BindingContext.NumberHeight" />
                                        </MultiBinding>
                                    </Label.FontSize>
                                </Label>

                            </Grid>
                        </Border>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>

            <!-- Show a message when the pictures are being loaded into the squares. -->
            <Border
                IsVisible="{Binding GameIsLoading}"
                Stroke="{AppThemeBinding Light=Black, Dark=White}"
                BackgroundColor="{DynamicResource PageBackgroundColor}"
                SemanticProperties.Description="{x:Static resources:AppResources.LoadingPleaseWait}"
                VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand">
                <Label x:Name="PleaseWaitLabel"
                    Margin="8"
                    Text="{x:Static resources:AppResources.LoadingPleaseWait}"
                    FontSize="Title" />
            </Border>

            <Border Margin="4" Padding="8" x:Name="WelcomeBorder"
                IsVisible="{Binding FirstRunSquares}"
                Stroke="{AppThemeBinding Light=Black, Dark=White}"
                BackgroundColor="{DynamicResource PageBackgroundColor}"
                SemanticProperties.Description="{x:Static resources:AppResources.SquaresWelcome}"
                VerticalOptions="Fill" HorizontalOptions="Fill">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" x:Name="SquaresWelcomeTitleLabel"
                        Text="{x:Static resources:AppResources.SquaresWelcome}"                        
                        FontSize="Title" />
                    <ScrollView Grid.Row="1">
                        <Editor x:Name="SquaresWelcomeTitleInstructions" IsReadOnly="True"
                            SemanticProperties.Description="{x:Static resources:AppResources.SquaresWelcome}"
                            Text="{x:Static resources:AppResources.WelcomeInstructions}" />
                    </ScrollView>
                    <Button Grid.Row="2" x:Name="WelcomeMessageCloseButton"
                        Text="{x:Static resources:AppResources.Close}" 
                        Clicked="WelcomeMessageCloseButton_Clicked"
                        TextColor="{StaticResource White}" BackgroundColor="{StaticResource Primary}"
                        HorizontalOptions="End" Margin="0,4,4,4" Padding="8" />
                </Grid>
            </Border>

        </Grid>
    </ContentPage.Content>
    
</ContentPage>