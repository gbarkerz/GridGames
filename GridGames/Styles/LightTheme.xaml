<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/dotnet/2021/maui"    
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"    
             x:Class="GridGames.Styles.LightTheme">

    <!-- Added during development of Grid Games. -->
    <Color x:Key="PageBackgroundColor">White</Color>
    <Color x:Key="MessageTextColor">Black</Color>
    <Color x:Key="GameTitleBarTextColor">White</Color>
    <Color x:Key="GameTitleBarBackgroundColor">#F0F0F0</Color>
    <Color x:Key="GridBackgroundColor">LightGray</Color>
    <Color x:Key="GridItemBackgroundColor">White</Color>
    <Color x:Key="SquaresNumberTextColor">Black</Color>
    <Color x:Key="SquaresNumberBackgroundColor">White</Color>
    <Color x:Key="FlyoutMenuItemColor">#0C77CF</Color>
    <Color x:Key="WheresTextColor">Black</Color>
    <Color x:Key="WheresAnsweredTextColor">White</Color>
    <Color x:Key="WheresAnsweredBackgroundColor">Green</Color>

    <Style TargetType="Label">
        <Setter Property="TextColor" Value="Black"></Setter>
    </Style>
    <Style TargetType="CheckBox">
        <Setter Property="Color" Value="Black"></Setter>
    </Style>
    <Style TargetType="Picker">
        <Setter Property="TextColor" Value="Black"></Setter>
        <Setter Property="BackgroundColor" Value="White"></Setter>
    </Style>

    <!-- Originally in App.xaml. -->
    <Color x:Key="Primary">#0C77CF</Color>
    <Style TargetType="Button">
        <Setter Property="TextColor" Value="White"></Setter>
        <Setter Property="BackgroundColor" Value="{DynamicResource Primary}"></Setter>

        <!-- There seems to be no left/right padding by default on Buttons on iOS. -->
        <Setter Property="Padding" Value="10,0,10,0"></Setter>
    </Style>

    <!-- Originally in AppShell.xaml. -->
    <Style x:Key="BaseStyle" TargetType="Element">
        <Setter Property="Shell.BackgroundColor" Value="{DynamicResource Primary}" />
        <!-- Only use Black because the Shell's FlyoutBackground seems ignored when the flyout's not open. -->
        <Setter Property="Shell.ForegroundColor" Value="Black" />
        <Setter Property="Shell.TitleColor" Value="White" />
        <Setter Property="Shell.TabBarBackgroundColor" Value="{DynamicResource Primary}" />
        <Setter Property="Shell.TabBarForegroundColor" Value="White"/>
        <Setter Property="Shell.TabBarTitleColor" Value="White"/>
    </Style>
    <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
    <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

    <!-- Without ShellContent being set here, the hamburger button's colors are
         not as expected when running on iOS. -->
    <Style TargetType="ShellContent" BasedOn="{StaticResource BaseStyle}"/>

    <!--
        Default Styles for all Flyout Items
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
        -->
    <Style Class="FlyoutItemLabelStyle" TargetType="Label">
        <Setter Property="TextColor" Value="{DynamicResource Primary}"></Setter>
    </Style>
    <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{DynamicResource Primary}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Selected">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                            <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="White" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

</ResourceDictionary>