<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppSettings" xml:space="preserve">
    <value>App Settings</value>
  </data>
  <data name="AppSettingsDarkTheme" xml:space="preserve">
    <value>Use a dark theme</value>
  </data>
  <data name="AppSettingsDarkThemeInstructions" xml:space="preserve">
    <value>Changing the theme will restart the current game.</value>
  </data>
  <data name="AppSettingsIntro" xml:space="preserve">
    <value>Settings here apply to all games in the Grid Games app.</value>
  </data>
  <data name="BonusAnswerRequired" xml:space="preserve">
    <value>Please check one or more WCAG before submitting your answer. Groups of WCAG will be shown after making selections at the WCAG group pickers.</value>
  </data>
  <data name="BrowsePicture" xml:space="preserve">
    <value>Browse for picture</value>
  </data>
  <data name="ChooseEightPictures" xml:space="preserve">
    <value>Please choose a picture in a folder that contains exactly 8 pictures.</value>
  </data>
  <data name="ClearSelection" xml:space="preserve">
    <value>Clear Selection</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CompletedSquaresPictureInMoves" xml:space="preserve">
    <value>You completed {0} in {1} goes.

Would you like to play another game?</value>
  </data>
  <data name="Congratulations" xml:space="preserve">
    <value>Congratulations!</value>
  </data>
  <data name="CorrectWCAG" xml:space="preserve">
    <value>You found {0}. Now where's {1}?</value>
  </data>
  <data name="CustomPicturesInstructions" xml:space="preserve">
    <value>To prepare custom pictures for showing in the Pairs game, first create a new folder and copy in the eight pictures that you'd like to have shown. Then create a text file in the same folder, called "PairsGamePictureDetails.txt". Edit the text file so that each line in the file contains the accessible details for one of the pictures in the folder. A line starts with the filename of the picture, followed by a tab, and then the accessible name of the picture. If a description is also provided, the name is followed by a tab, and then the description.</value>
  </data>
  <data name="DefaultMatchingCard1Description" xml:space="preserve">
    <value>A smiling man with a red coat and arms outstretched, standing in front of 3 large Daleks and a TARDIS. The Daleks seem to be raised above the grass beneath them, and a slightly cloudy sky is in the background.</value>
  </data>
  <data name="DefaultMatchingCard1Name" xml:space="preserve">
    <value>Daleks in Blackpool</value>
  </data>
  <data name="DefaultMatchingCard2Description" xml:space="preserve">
    <value>A small brown stone lighthouse, with an upper small balcony and a lower bigger balcony. A covered sitting area is at the base of the lighthouse. In front of the lighthouse in the stone ground are anchor and compass symbols, and in the background is a grey cloudy sky.</value>
  </data>
  <data name="DefaultMatchingCard2Name" xml:space="preserve">
    <value>Lower Lighthouse in Fleetwood</value>
  </data>
  <data name="DefaultMatchingCard3Description" xml:space="preserve">
    <value>A first-person view looking down on two portions of fish and chips in trays and paper. In the background is a concrete path, and two partially shown shoes.</value>
  </data>
  <data name="DefaultMatchingCard3Name" xml:space="preserve">
    <value>Fish and Chips in Cleveleys</value>
  </data>
  <data name="DefaultMatchingCard4Description" xml:space="preserve">
    <value>A small, very old hexagonal red stone building, with castellated battlements housing a cross. Arched windows on the sides of the building are bricked-up from the inside. The building sits on grass, with a bay and cloudy sky in the background.</value>
  </data>
  <data name="DefaultMatchingCard4Name" xml:space="preserve">
    <value>Cockersand Abbey</value>
  </data>
  <data name="DefaultMatchingCard5Description" xml:space="preserve">
    <value>A white windmill with a black roof and black sails. The windmill has stairs going up to a black door, and black windows. In the background is a street of houses and a clear, blue sky.</value>
  </data>
  <data name="DefaultMatchingCard5Name" xml:space="preserve">
    <value>Lytham St Annes Windmill</value>
  </data>
  <data name="DefaultMatchingCard6Description" xml:space="preserve">
    <value>The stone ruins of a large, very old abbey. The abbey has no roof or windows, and the sun shines through the arches from behind the abbey. In the foreground is a lawn housing multiple large stone graves, and in the background is a clear blue sky.</value>
  </data>
  <data name="DefaultMatchingCard6Name" xml:space="preserve">
    <value>Bolton Abbey</value>
  </data>
  <data name="DefaultMatchingCard7Description" xml:space="preserve">
    <value>A large stone obelisk in a town square, with buildings and trees nearby. The sun shines on the obelisk, with a slightly cloudy, blue sky in the background. At the base of the obelisk are six red wreaths.</value>
  </data>
  <data name="DefaultMatchingCard7Name" xml:space="preserve">
    <value>Harrogate Obelisk</value>
  </data>
  <data name="DefaultMatchingCard8Description" xml:space="preserve">
    <value>A small square stone building with an opening on the near side. Above the opening is a Greek inscription. Railing surrounds the top of the building, and a sundial sits at the centre of the top. In the background is rocky grassland, with rolling hills in the far background along with a slightly cloudy, blue sky.</value>
  </data>
  <data name="DefaultMatchingCard8Name" xml:space="preserve">
    <value>Hampsfell Hospice</value>
  </data>
  <data name="DefaultSquare10Name" xml:space="preserve">
    <value>10</value>
  </data>
  <data name="DefaultSquare11Name" xml:space="preserve">
    <value>11</value>
  </data>
  <data name="DefaultSquare12Name" xml:space="preserve">
    <value>12</value>
  </data>
  <data name="DefaultSquare13Name" xml:space="preserve">
    <value>13</value>
  </data>
  <data name="DefaultSquare14Name" xml:space="preserve">
    <value>14</value>
  </data>
  <data name="DefaultSquare15Name" xml:space="preserve">
    <value>15</value>
  </data>
  <data name="DefaultSquare1Name" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="DefaultSquare2Name" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="DefaultSquare3Name" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="DefaultSquare4Name" xml:space="preserve">
    <value>4</value>
  </data>
  <data name="DefaultSquare5Name" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="DefaultSquare6Name" xml:space="preserve">
    <value>6</value>
  </data>
  <data name="DefaultSquare7Name" xml:space="preserve">
    <value>7</value>
  </data>
  <data name="DefaultSquare8Name" xml:space="preserve">
    <value>8</value>
  </data>
  <data name="DefaultSquare9Name" xml:space="preserve">
    <value>9</value>
  </data>
  <data name="DefaultSquareEmpty" xml:space="preserve">
    <value>Empty</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="Down" xml:space="preserve">
    <value>down</value>
  </data>
  <data name="Eight" xml:space="preserve">
    <value>eight</value>
  </data>
  <data name="Eleven" xml:space="preserve">
    <value>eleven</value>
  </data>
  <data name="FaceDown" xml:space="preserve">
    <value>Face down</value>
  </data>
  <data name="FallthroughTapMessage" xml:space="preserve">
    <value>Please use the keyboard to play the game.

Review the Help content for details on how to play the game using only the keyboard.</value>
  </data>
  <data name="Fifteen" xml:space="preserve">
    <value>fifteen</value>
  </data>
  <data name="FillCardAndClip" xml:space="preserve">
    <value>Fill card and clip</value>
  </data>
  <data name="FillCardWithoutClipping" xml:space="preserve">
    <value>Fill card without clipping</value>
  </data>
  <data name="Five" xml:space="preserve">
    <value>five</value>
  </data>
  <data name="Four" xml:space="preserve">
    <value>four</value>
  </data>
  <data name="Fourteen" xml:space="preserve">
    <value>fourteen</value>
  </data>
  <data name="GameReady" xml:space="preserve">
    <value>Game is ready to play.</value>
  </data>
  <data name="GetTip" xml:space="preserve">
    <value>Get a tip</value>
  </data>
  <data name="GridGames" xml:space="preserve">
    <value>Grid Games</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="HelpContentPairs" xml:space="preserve">
    <value>The Pairs Game is based on a traditional card matching game, where face-down cards are turned over in order to find pairs of cards.

When the game is run, a 4 by 4 grid of blank squares appears, each square representing a face-down card. When one of the cards is turned up, it reveals an image on the face-up card. When another card is turned up, an image is also shown on that second face-up card. If the two images are the same, then the cards are considered to be matched, and will not change again for the rest of the game. If the images do not match, then the cards are considered to be unmatched, and cards must be then turned back down. These steps are then repeated until all matching images have been found, and a "Congratulations" window appears.

The Pairs game can only be played using the keyboard, and cards cannot be turned up using a mouse, touch, or speech. To use the keyboard to play the game, first use the Tab key to move keyboard focus into the grid of cards. Once keyboard focus in on the grid, use the arrow keys to move to a card of interest. Once at a card of interest, press either the Space key or Enter key to turn the card up. To turn two unmatched face-up cards back down, press Space or Enter at any card.

Press the F1 key to show this Help content, or the F5 key to restart a game. 

Press and release the Alt key to have any available access keys shown. For example, press Alt+S to have the game's Settings page shown. To have your own pictures shown in the game, along with custom accessible names and descriptions, please follow the steps described in the Settings page.

At the top left corner of the game is the Open Navigation button, which can be used to move to another game. Please note when a screen reader moves to the drop-down menu available from the Open Navigation button, it may announce a meaningless name for all the items in the menu. If so, please use the screen reader's navigation commands to move into the menu item, and the screen reader can then announce the text shown on the menu item.</value>
  </data>
  <data name="HelpContentSquares" xml:space="preserve">
    <value>The Squares Game is based on a square sliding puzzle, where squares in a grid of squares are rearranged by the player to form an ordered sequence of squares in the grid.

When the game is run, a 4 by 4 grid of squares appears, with fifteen of those squares occupied with a movable element, and one square being empty. When a square is clicked, if it is adjacent to the empty square, the clicked square moves into the empty square. The space where the tapped square was then becomes the empty square. The aim is to arrange all the squares in a sorted order, leaving the empty square in the bottom right corner of the grid. Once all the squares are ordered, a "Congratulations" window appears.

The Squares game can only be played using the keyboard, and squares cannot be moved using a mouse, touch, or speech. To use the keyboard to play the game, first use the Tab key to move keyboard focus into the grid of squares. Once keyboard focus in on the grid, use the arrow keys to move to a square of interest. Once at a square of interest, press either the Space key or Enter key to click the square.

Press the F1 key to show this Help content, or the F5 key to restart a game. 

Press and release the Alt key to have any available access keys shown. For example, press Alt+S to have the game's Settings page shown. To have your own picture shown in the game, please follow the steps described in the Settings page.

At the top left corner of the game is the Open Navigation button, which can be used to move to another game. Please note when a screen reader moves to the drop-down menu available from the Open Navigation button, it may announce a meaningless name for all the items in the menu. If so, please use the screen reader's navigation commands to move into the menu item, and the screen reader can then announce the text shown on the menu item.</value>
  </data>
  <data name="HelpContentWheres" xml:space="preserve">
    <value>"WCAG" is the Web Content Accessibility Guidelines (WCAG) international standard, which helps web content authors create content that's more accessible. The WCAG standard has been used as the base for European accessibility standards which apply to both web content and software.

The Where's WCAG? game presents a question asking the player to find a particular WCAG group. For example, "Where's Enough Time?". Below the question in the app is a 4 by 4 grid of squares showing fifteen WCAG group numbers. For example, "2.2". The aim of the game is for the player to click the square in the grid which shows the number matching the WCAG group in the question. If successful, the square changes to also show both the number and name of the WCAG group, and the question changes to ask the player to find a different WCAG group. If not successful, the player tries again by clicking another square. Once all the WCAG groups are found, the player has won, and a "Congratulations" window appears. 

Note that the game only presents WCAG groups relating to content being perceivable, operable, and understandable, and from the WCAG 2.1 Standard.

The Where's WCAG game can only be played using the keyboard, and squares cannot be clicked up using a mouse, touch, or speech. To use the keyboard to play the game, first use the Tab key to move keyboard focus into the grid of squares. Once keyboard focus in on the grid, use the arrow keys to move to a square of interest. Once at a square of interest, press either the Space key or Enter key to click the square.

Press the F1 key to show this Help content, or the F5 key to restart a game. 

Press and release the Alt key to have any available access keys shown. For example, press Alt+S to have the game's Settings page shown. To have bonus questions asked in the game, please follow the steps described in the Settings page.

At the top left corner of the game is the Open Navigation button, which can be used to move to another game. Please note when a screen reader moves to the drop-down menu available from the Open Navigation button, it may announce a meaningless name for all the items in the menu. If so, please use the screen reader's navigation commands to move into the menu item, and the screen reader can then announce the text shown on the menu item.</value>
  </data>
  <data name="IncorrectWCAG" xml:space="preserve">
    <value>{0} isn't {1}.</value>
  </data>
  <data name="Large" xml:space="preserve">
    <value>Large</value>
  </data>
  <data name="Largest" xml:space="preserve">
    <value>Largest</value>
  </data>
  <data name="Left" xml:space="preserve">
    <value>left</value>
  </data>
  <data name="LoadedCustomPictures" xml:space="preserve">
    <value>Loaded custom pictures</value>
  </data>
  <data name="LoadingPleaseWait" xml:space="preserve">
    <value>Please wait a moment while the picture is loaded into the squares.</value>
  </data>
  <data name="Matched" xml:space="preserve">
    <value>Matched</value>
  </data>
  <data name="MatchingWonInMoves" xml:space="preserve">
    <value>You won the game in {0} goes.

Would you like to play another game?</value>
  </data>
  <data name="Medium" xml:space="preserve">
    <value>Medium</value>
  </data>
  <data name="MissingPairsGamePictureDetails" xml:space="preserve">
    <value>The folder containing the 8 picture must also contain a PairsGamePictureDetails file. Please review the Pairs Help for more details.</value>
  </data>
  <data name="Moved" xml:space="preserve">
    <value>Moved</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="Nine" xml:space="preserve">
    <value>nine</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NoFolderSelected" xml:space="preserve">
    <value>No folder selected</value>
  </data>
  <data name="NoMovePossible" xml:space="preserve">
    <value>A move is not possible from here.</value>
  </data>
  <data name="NumberSize" xml:space="preserve">
    <value>Number size</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="One" xml:space="preserve">
    <value>one</value>
  </data>
  <data name="Pairs" xml:space="preserve">
    <value>Pairs</value>
  </data>
  <data name="PairsCustomPicturesViewSample" xml:space="preserve">
    <value>A sample custom pictures folder is available at https://github.com/gbarkerz/GridGames/tree/master/GridGames/PairsSamples/LittleMoretonHall. Consider making your own set of pictures and accessible details, and showing in the Pairs game.</value>
  </data>
  <data name="PairsGameHelp" xml:space="preserve">
    <value>Pairs Help</value>
  </data>
  <data name="PairsSettings" xml:space="preserve">
    <value>Pairs Settings</value>
  </data>
  <data name="PairsWelcome" xml:space="preserve">
    <value>Welcome to the Pairs Game!</value>
  </data>
  <data name="PictureAspectInstructions" xml:space="preserve">
    <value>Pick how the pictures will be shown in the cards.</value>
  </data>
  <data name="PictureAspectLabel" xml:space="preserve">
    <value>Scale type</value>
  </data>
  <data name="PictureNameLabel" xml:space="preserve">
    <value>Picture Name:</value>
  </data>
  <data name="PicturePath" xml:space="preserve">
    <value>Selected picture folder:</value>
  </data>
  <data name="RestartGame" xml:space="preserve">
    <value>Restart Game</value>
  </data>
  <data name="Right" xml:space="preserve">
    <value>right</value>
  </data>
  <data name="Selected" xml:space="preserve">
    <value>Selected:</value>
  </data>
  <data name="SelectPicture" xml:space="preserve">
    <value>Select picture folder</value>
  </data>
  <data name="Seven" xml:space="preserve">
    <value>seven</value>
  </data>
  <data name="ShowBonusQuestion" xml:space="preserve">
    <value>Show bonus WCAG questions</value>
  </data>
  <data name="ShowCustomPictures" xml:space="preserve">
    <value>Show custom pictures</value>
  </data>
  <data name="ShowFullPicture" xml:space="preserve">
    <value>Show full picture</value>
  </data>
  <data name="ShowNumbers" xml:space="preserve">
    <value>Show numbers</value>
  </data>
  <data name="ShowPicture" xml:space="preserve">
    <value>Show picture</value>
  </data>
  <data name="Six" xml:space="preserve">
    <value>six</value>
  </data>
  <data name="Sixteen" xml:space="preserve">
    <value>sixteen</value>
  </data>
  <data name="Small" xml:space="preserve">
    <value>Small</value>
  </data>
  <data name="Squares" xml:space="preserve">
    <value>Squares</value>
  </data>
  <data name="SquaresGameHelp" xml:space="preserve">
    <value>Squares Help</value>
  </data>
  <data name="SquaresSettings" xml:space="preserve">
    <value>Squares Settings</value>
  </data>
  <data name="SquaresSettingsInstructions" xml:space="preserve">
    <value>Please specify what you would like to appear inside the squares shown in the grid.</value>
  </data>
  <data name="SquaresWelcome" xml:space="preserve">
    <value>Welcome to the Squares Game!</value>
  </data>
  <data name="SquaresWonInGoes" xml:space="preserve">
    <value>You won the game in {0} moves.

Would you like to play another game?</value>
  </data>
  <data name="String" xml:space="preserve">
    <value>Would you like to play another game?</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value>When the game is run, a 4 by 4 grid of blank squares appears, each square representing a card. When a card is tapped, an image is shown on the card. When another card is clicked, an image is also shown on that second card. If the two images are the same, then the cards are considered to be matched, and will not change again for the rest of the game. If the images do not match, then the cards are considered to be unmatched, and cards must be turned back over by tapping on any card. These steps are to be repeated until all matching images have been found, and a "Congratulations" window appears.</value>
  </data>
  <data name="String10" xml:space="preserve">
    <value>When the game setting to have a picture shown on the squares is on, then a single picture is shown across all the squares. The sections of the picture will appear jumbled until the squares are arranged in their sorted order.</value>
  </data>
  <data name="String11" xml:space="preserve">
    <value>When using a screen reader with the game, move your finger around the screen to have the number of the square beneath your finger announced. Double tap to move a square.</value>
  </data>
  <data name="String12" xml:space="preserve">
    <value>Please note when a screen reader moves to the Menu button near the top left corner of the app, it may announce the button as the OK button or Menu button, or only announce the word button.</value>
  </data>
  <data name="String13" xml:space="preserve">
    <value>Would you like to play another game?</value>
  </data>
  <data name="String14" xml:space="preserve">
    <value>Would you like to play another game?</value>
  </data>
  <data name="String15" xml:space="preserve">
    <value>Note that screen readers may announce the menu button as the "OK" button or only as "button".</value>
  </data>
  <data name="String2" xml:space="preserve">
    <value>When using a screen reader with the game, move your finger around the screen to have the number of the card beneath your finger announced. Double tap to turn up a card. When a turned up card is matched, its name will be prefixed with "Matched".</value>
  </data>
  <data name="String3" xml:space="preserve">
    <value>Please note when a screen reader moves to the Menu button near the top left corner of the app, it may announce the button as the OK button or Menu button, or only announce the word button.</value>
  </data>
  <data name="String4" xml:space="preserve">
    <value>The Squares Game is based on a square sliding puzzle, where squares in a grid of squares are rearranged by the player to form an ordered sequence in the grid.</value>
  </data>
  <data name="String5" xml:space="preserve">
    <value>When the game is run, a 4 by 4 grid of squares appears, with fifteen of those squares occupied with a movable element, and one square being empty. When a square is tapped, if it is adjacent to the empty square, the tapped square moves into the empty square. The space where the tapped square was then becomes the empty square. The aim is to arrange all the squares in a sorted order, leaving the empty square in the bottom right corner of the grid. Once all the squares are ordered, a "Congratulations" window appears.</value>
  </data>
  <data name="String6" xml:space="preserve">
    <value>Tip: Don't use a swipe gesture to move a square. Support for swipe gestures has yet to be added to the game.</value>
  </data>
  <data name="String7" xml:space="preserve">
    <value>Tip: Don't tap on the empty square. Instead tap on the squares next to the empty square.</value>
  </data>
  <data name="String8" xml:space="preserve">
    <value>When the game first runs, the setting to have numbers shown on squares is on, and the settings to have pictures shown on the squares is off. This means a number is shown in the top left corner of the squares. When the squares are sorted, the square showing number 1 is at the top left of the grid, and the numbers increase from left to right then top to bottom.</value>
  </data>
  <data name="String9" xml:space="preserve">
    <value>Tip: Practice moving numbered squares around before changing the setting to have a picture shown on the squares.</value>
  </data>
  <data name="Ten" xml:space="preserve">
    <value>ten</value>
  </data>
  <data name="ThatsMatch" xml:space="preserve">
    <value>That's a match.</value>
  </data>
  <data name="Thirteen" xml:space="preserve">
    <value>thirteen</value>
  </data>
  <data name="Three" xml:space="preserve">
    <value>three</value>
  </data>
  <data name="TipVisitEN301" xml:space="preserve">
    <value>Many apps that ship in Europe are subject to the European standard for digital accessibility, EN 301 549. Many of those standards are based on WCAG.</value>
  </data>
  <data name="TurnedUp" xml:space="preserve">
    <value>Turned up</value>
  </data>
  <data name="Twelve" xml:space="preserve">
    <value>twelve</value>
  </data>
  <data name="Two" xml:space="preserve">
    <value>two</value>
  </data>
  <data name="UnexpectedDataInFile" xml:space="preserve">
    <value>The PairsGamePictureDetails file does not contain the expected data. Please review the Pairs Help for more details.</value>
  </data>
  <data name="UnmatchedTurnedBack" xml:space="preserve">
    <value>Unmatched cards turned back.</value>
  </data>
  <data name="Up" xml:space="preserve">
    <value>up</value>
  </data>
  <data name="WCAG111Label" xml:space="preserve">
    <value>1.1.1 Non-text Content</value>
  </data>
  <data name="WCAG11Label" xml:space="preserve">
    <value>1.1 Text Alternatives</value>
  </data>
  <data name="WCAG121Label" xml:space="preserve">
    <value>1.2.1 Audio-only and Video-only (Prerecorded)</value>
  </data>
  <data name="WCAG122Label" xml:space="preserve">
    <value>1.2.2 Captions (Prerecorded)</value>
  </data>
  <data name="WCAG123Label" xml:space="preserve">
    <value>1.2.3 Audio Description or Media Alternative (Prerecorded)</value>
  </data>
  <data name="WCAG124Label" xml:space="preserve">
    <value>1.2.4 Captions (Live)</value>
  </data>
  <data name="WCAG125Label" xml:space="preserve">
    <value>1.2.5 Audio Description (Prerecorded)</value>
  </data>
  <data name="WCAG126Label" xml:space="preserve">
    <value>1.2.6 Sign Language (Prerecorded)</value>
  </data>
  <data name="WCAG127Label" xml:space="preserve">
    <value>1.2.7 Extended Audio Description (Prerecorded)</value>
  </data>
  <data name="WCAG128Label" xml:space="preserve">
    <value>1.2.8 Media Alternative (Prerecorded)</value>
  </data>
  <data name="WCAG129Label" xml:space="preserve">
    <value>1.2.9 Audio-only (Live)</value>
  </data>
  <data name="WCAG12Label" xml:space="preserve">
    <value>1.2 Time-based Media</value>
  </data>
  <data name="WCAG131Label" xml:space="preserve">
    <value>1.3.1 Info and Relationships</value>
  </data>
  <data name="WCAG132Label" xml:space="preserve">
    <value>1.3.2 Meaningful Sequence</value>
  </data>
  <data name="WCAG133Label" xml:space="preserve">
    <value>1.3.3 Sensory Characteristics</value>
  </data>
  <data name="WCAG134Label" xml:space="preserve">
    <value>1.3.4 Orientation</value>
  </data>
  <data name="WCAG135Label" xml:space="preserve">
    <value>1.3.5 Identify Input Purpose</value>
  </data>
  <data name="WCAG136Label" xml:space="preserve">
    <value>1.3.6 Identify Purpose</value>
  </data>
  <data name="WCAG13Label" xml:space="preserve">
    <value>1.3 Adaptable</value>
  </data>
  <data name="WCAG1410Label" xml:space="preserve">
    <value>1.4.10 Reflow</value>
  </data>
  <data name="WCAG1411Label" xml:space="preserve">
    <value>1.4.11 Non-text Contrast</value>
  </data>
  <data name="WCAG1412Label" xml:space="preserve">
    <value>1.4.12 Text Spacing</value>
  </data>
  <data name="WCAG1413Label" xml:space="preserve">
    <value>1.4.13 Content on Hover or Focus</value>
  </data>
  <data name="WCAG141Label" xml:space="preserve">
    <value>1.4.1 Use of Color</value>
  </data>
  <data name="WCAG142Label" xml:space="preserve">
    <value>1.4.2 Audio Control</value>
  </data>
  <data name="WCAG143Label" xml:space="preserve">
    <value>1.4.3 Contrast (Minimum)</value>
  </data>
  <data name="WCAG144Label" xml:space="preserve">
    <value>1.4.4 Resize text</value>
  </data>
  <data name="WCAG145Label" xml:space="preserve">
    <value>1.4.5 Images of Text</value>
  </data>
  <data name="WCAG146Label" xml:space="preserve">
    <value>1.4.6 Contrast (Enhanced)</value>
  </data>
  <data name="WCAG147Label" xml:space="preserve">
    <value>1.4.7 Low or No Background Audio</value>
  </data>
  <data name="WCAG148Label" xml:space="preserve">
    <value>1.4.8 Visual Presentation</value>
  </data>
  <data name="WCAG149Label" xml:space="preserve">
    <value>1.4.9 Images of Text (No Exception)</value>
  </data>
  <data name="WCAG14Label" xml:space="preserve">
    <value>1.4 Distinguishable</value>
  </data>
  <data name="WCAG1Label" xml:space="preserve">
    <value>1 Perceivable</value>
  </data>
  <data name="WCAG211Label" xml:space="preserve">
    <value>2.1.1 Keyboard</value>
  </data>
  <data name="WCAG212Label" xml:space="preserve">
    <value>2.1.2 No Keyboard Trap</value>
  </data>
  <data name="WCAG213Label" xml:space="preserve">
    <value>2.1.3 Keyboard (No Exception)</value>
  </data>
  <data name="WCAG214Label" xml:space="preserve">
    <value>2.1.4 Character Key Shortcuts</value>
  </data>
  <data name="WCAG21Label" xml:space="preserve">
    <value>2.1 Keyboard Accessible</value>
  </data>
  <data name="WCAG221Label" xml:space="preserve">
    <value>2.2.1 Timing Adjustable</value>
  </data>
  <data name="WCAG222Label" xml:space="preserve">
    <value>2.2.2 Pause, Stop, Hide</value>
  </data>
  <data name="WCAG223Label" xml:space="preserve">
    <value>2.2.3 No Timing</value>
  </data>
  <data name="WCAG224Label" xml:space="preserve">
    <value>2.2.4 Interruptions</value>
  </data>
  <data name="WCAG225Label" xml:space="preserve">
    <value>2.2.5 Re-authenticating</value>
  </data>
  <data name="WCAG226Label" xml:space="preserve">
    <value>2.2.6 Timeouts</value>
  </data>
  <data name="WCAG22Label" xml:space="preserve">
    <value>2.2 Enough Time</value>
  </data>
  <data name="WCAG231Label" xml:space="preserve">
    <value>2.3.1 Three Flashes or Below Threshold</value>
  </data>
  <data name="WCAG232Label" xml:space="preserve">
    <value>2.3.2 Three Flashes</value>
  </data>
  <data name="WCAG233Label" xml:space="preserve">
    <value>2.3.3 Animation from Interactions</value>
  </data>
  <data name="WCAG23Label" xml:space="preserve">
    <value>2.3 Seizures and Physical Reactions</value>
  </data>
  <data name="WCAG2410Label" xml:space="preserve">
    <value>2.4.10 Section Headings</value>
  </data>
  <data name="WCAG2411Label" xml:space="preserve">
    <value>2.4.11 Focus Appearance (Minimum)</value>
  </data>
  <data name="WCAG2412Label" xml:space="preserve">
    <value>2.4.12 Focus Appearance (Enhanced)</value>
  </data>
  <data name="WCAG2413Label" xml:space="preserve">
    <value>2.4.13 Page Break Navigation</value>
  </data>
  <data name="WCAG241Label" xml:space="preserve">
    <value>2.4.1 Bypass Blocks</value>
  </data>
  <data name="WCAG242Label" xml:space="preserve">
    <value>2.4.2 Page Titled</value>
  </data>
  <data name="WCAG243Label" xml:space="preserve">
    <value>2.4.3 Focus Order</value>
  </data>
  <data name="WCAG244Label" xml:space="preserve">
    <value>2.4.4 Link Purpose (In Context)</value>
  </data>
  <data name="WCAG245Label" xml:space="preserve">
    <value>2.4.5 Multiple Ways</value>
  </data>
  <data name="WCAG246Label" xml:space="preserve">
    <value>2.4.6 Headings and Labels</value>
  </data>
  <data name="WCAG247Label" xml:space="preserve">
    <value>2.4.7 Focus Visible</value>
  </data>
  <data name="WCAG248Label" xml:space="preserve">
    <value>2.4.8 Location</value>
  </data>
  <data name="WCAG249Label" xml:space="preserve">
    <value>2.4.9 Link Purpose (Link Only)</value>
  </data>
  <data name="WCAG24Label" xml:space="preserve">
    <value>2.4 Navigable</value>
  </data>
  <data name="WCAG251Label" xml:space="preserve">
    <value>2.5.1 Pointer Gestures</value>
  </data>
  <data name="WCAG252Label" xml:space="preserve">
    <value>2.5.2 Pointer Cancellation</value>
  </data>
  <data name="WCAG253Label" xml:space="preserve">
    <value>2.5.3 Label in Name</value>
  </data>
  <data name="WCAG254Label" xml:space="preserve">
    <value>2.5.4 Motion Actuation</value>
  </data>
  <data name="WCAG255Label" xml:space="preserve">
    <value>2.5.5 Target Size (Enhanced)</value>
  </data>
  <data name="WCAG256Label" xml:space="preserve">
    <value>2.5.6 Concurrent Input Mechanisms</value>
  </data>
  <data name="WCAG257Label" xml:space="preserve">
    <value>2.5.7 Dragging Movements</value>
  </data>
  <data name="WCAG258Label" xml:space="preserve">
    <value>2.5.8 Target Size (Minimum)</value>
  </data>
  <data name="WCAG25Label" xml:space="preserve">
    <value>2.5 Input Modalities</value>
  </data>
  <data name="WCAG2Label" xml:space="preserve">
    <value>2 Operable</value>
  </data>
  <data name="WCAG311Label" xml:space="preserve">
    <value>3.1.1 Language of Page</value>
  </data>
  <data name="WCAG312Label" xml:space="preserve">
    <value>3.1.2 Language of Parts</value>
  </data>
  <data name="WCAG313Label" xml:space="preserve">
    <value>3.1.3 Unusual Words</value>
  </data>
  <data name="WCAG314Label" xml:space="preserve">
    <value>3.1.4 Abbreviations</value>
  </data>
  <data name="WCAG315Label" xml:space="preserve">
    <value>3.1.5 Reading Level</value>
  </data>
  <data name="WCAG316Label" xml:space="preserve">
    <value>3.1.6 Pronunciation</value>
  </data>
  <data name="WCAG31Label" xml:space="preserve">
    <value>3.1 Readable</value>
  </data>
  <data name="WCAG321Label" xml:space="preserve">
    <value>3.2.1 On Focus</value>
  </data>
  <data name="WCAG322Label" xml:space="preserve">
    <value>3.2.2 On Input</value>
  </data>
  <data name="WCAG323Label" xml:space="preserve">
    <value>3.2.3 Consistent Navigation</value>
  </data>
  <data name="WCAG324Label" xml:space="preserve">
    <value>3.2.4 Consistent Identification</value>
  </data>
  <data name="WCAG325Label" xml:space="preserve">
    <value>3.2.5 Change on Request</value>
  </data>
  <data name="WCAG326Label" xml:space="preserve">
    <value>3.2.6 Consistent Help</value>
  </data>
  <data name="WCAG327Label" xml:space="preserve">
    <value>3.2.7 Visible Controls</value>
  </data>
  <data name="WCAG32Label" xml:space="preserve">
    <value>3.2 Predictable</value>
  </data>
  <data name="WCAG331Label" xml:space="preserve">
    <value>3.3.1 Error Identification</value>
  </data>
  <data name="WCAG332Label" xml:space="preserve">
    <value>3.3.2 Labels or Instructions</value>
  </data>
  <data name="WCAG333Label" xml:space="preserve">
    <value>3.3.3 Error Suggestion</value>
  </data>
  <data name="WCAG334Label" xml:space="preserve">
    <value>3.3.4 Error Prevention (Legal, Financial, Data)</value>
  </data>
  <data name="WCAG335Label" xml:space="preserve">
    <value>3.3.5 Help</value>
  </data>
  <data name="WCAG336Label" xml:space="preserve">
    <value>3.3.6 Error Prevention (All)</value>
  </data>
  <data name="WCAG337Label" xml:space="preserve">
    <value>3.3.7 Accessible Authentication</value>
  </data>
  <data name="WCAG338Label" xml:space="preserve">
    <value>3.3.8 Redundant entry</value>
  </data>
  <data name="WCAG33Label" xml:space="preserve">
    <value>3.3 Input Assistance</value>
  </data>
  <data name="WCAG3Label" xml:space="preserve">
    <value>3 Understandable</value>
  </data>
  <data name="WCAG411Label" xml:space="preserve">
    <value>4.1.1 Parsing</value>
  </data>
  <data name="WCAG412Label" xml:space="preserve">
    <value>4.1.2 Name, Role, Value</value>
  </data>
  <data name="WCAG413Label" xml:space="preserve">
    <value>4.1.3 Status Messages</value>
  </data>
  <data name="WCAG41Label" xml:space="preserve">
    <value>4.1 Compatible</value>
  </data>
  <data name="WCAG4Label" xml:space="preserve">
    <value>4 Robust</value>
  </data>
  <data name="WelcomeInstructions" xml:space="preserve">
    <value>After closing this message, please review the help content for details on how to play this game.

The help content can be reached via the menu button at the top left corner of the app. Screen readers may announce this button as the "Open Navigation" button or "Menu" button. When the menu button is clicked, a menu of items is shown beneath it. The items can be used to switch between the games, or to restart a game, or to have the help content shown.</value>
  </data>
  <data name="Wheres" xml:space="preserve">
    <value>Where's WCAG?</value>
  </data>
  <data name="WheresBonusQuestionsInstructions" xml:space="preserve">
    <value>By default, the bonus questions are from a fixed set of questions that come with the Where's WCAG? game. But if you'd prefer, you can select your own set of questions for players to answer. Select your own set of questions with the "Select Questions" button below. The text file you select must contain fifteen question and answer pairs. Each question lies on its own line in the file, and starts with "Q:". Each answer lies on the line that follows the associated question, and starts with "A:". An answer is a WCAG number, such as "3.3.2". Questions with multiple answers have answers separated with a comma, such as "1.4.3,1.4.11".</value>
  </data>
  <data name="WheresBonusQuestionsIntro" xml:space="preserve">
    <value>After every correct answer in the Where's WCAG game, have a bonus WCAG-related question asked.</value>
  </data>
  <data name="WheresBonusQuestionsOrder" xml:space="preserve">
    <value>Questions from the default set of questions will be presented in a random order. Questions loaded from your own set of custom questions will be presented in the order that they were loaded from the questions file.</value>
  </data>
  <data name="WheresBonusQuestionsViewSample" xml:space="preserve">
    <value>A sample bonus question file is available at https://github.com/gbarkerz/GridGames/blob/master/GridGames/SampleWheresWCAGBonusQuestions.txt. Consider copying the contents of that file into your own Q&amp;A file, and then changing the Q&amp;A pairs to suit your own purposes.</value>
  </data>
  <data name="WheresGameHelp" xml:space="preserve">
    <value>Where's WCAG? Help</value>
  </data>
  <data name="WheresSettings" xml:space="preserve">
    <value>Where's WCAG? Settings</value>
  </data>
  <data name="WheresWelcome" xml:space="preserve">
    <value>Welcome to the Where's WCAG? Game!</value>
  </data>
  <data name="WonInMoves" xml:space="preserve">
    <value>You won the game in {0} goes.

Would you like to play another game?</value>
  </data>
  <data name="WonInMovesWithBonusQuestionCount" xml:space="preserve">
    <value>You won the game in {0} goes, and got {1} bonus questions correct!

Would you like to play another game?</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>